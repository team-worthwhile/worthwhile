/*
 * Builds an array with specified length that contains the
 * values from 1 to length.
 */
function Integer[] buildArray(Integer length) {
	
	Integer[] result
	Integer i := 1
	
	while (i ≤ length) {
		result[i - 1] := i
		i := i + 1
	}
	
	return result
	
}

function Integer sumArray(Integer[] arrayToSum, Integer arrayLength)
	_requires arrayLength ≥ 0
	_ensures _return = (arrayLength * (arrayLength + 1)) / 2
{ 
	Integer sum := 0
	Integer j := 0

	while (j < arrayLength)
		_invariant sum = (j * (j + 1)) / 2
	{
		sum := sum + arrayToSum[j]	
		j := j + 1
	}
	
	return sum
}

Integer len := 100
Integer[] array := buildArray(len)
Integer mySum := sumArray(array, len)

_assert mySum = (len * (len + 1)) / 2
