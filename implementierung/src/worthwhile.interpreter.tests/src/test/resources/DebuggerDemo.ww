// EXPECTED:VALID
/*
 * Builds an array with specified length that contains the
 * values from 1 to length.
 */
function Integer[] buildArray(Integer length)
_ensures forall Integer i0, 0 <= i0 && i0 < length : _return[i0] = i0 + 1
{
	
	Integer[] result
	Integer i := 1
	
	while (i ≤ length)
	_invariant forall Integer i1, 0 <= i1 && i1 < i - 1 : result[i1] = i1 + 1
	{
		result[i - 1] := i
		i := i + 1
	}
	
	return result
	
}

function Integer sumArray(Integer[] arrayToSum, Integer arrayLength)
	_requires arrayLength ≥ 0
	_requires forall Integer i2, 0 <= i2 && i2 < arrayLength : arrayToSum[i2] = i2 + 1
	_ensures _return = (arrayLength * (arrayLength + 1)) / 2
{ 
	Integer sum := 0
	Integer j := 0

	while (j < arrayLength)
		_invariant j >= 0 && j <= arrayLength
		_invariant sum = (j * (j + 1)) / 2
	{
		sum := sum + arrayToSum[j]	
		j := j + 1
	}
	
	return sum
}

Integer len := 100
Integer[] array := buildArray(len)
Integer mySum := sumArray(array, len)

_assert mySum = (len * (len + 1)) / 2
